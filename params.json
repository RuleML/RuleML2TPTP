{"name":"RuleML2TPTP","tagline":"This project is aimed at implementing an XSLT 2.0 translator to convert Datalog+ Deliberation RuleML 1.01 in XML format to an equivalent representation in a subset of the TPTP (Thousands of Problems for Theorem Provers) format.","body":"RuleML2TPTP\r\n=============================\r\n\r\n*This is an easy-to-use translator utilizing XSLT 2.0 between two rule languages.*\r\n\r\n### Introduction\r\n\r\n[RuleML](http://wiki.ruleml.org) is a knowledge representation language developed by the non-profit organization RuleML Inc. RuleML is being used for sharing rule bases in XML and publishing them on the Web. It has broad coverage and is defined as an extensible family of sublanguages across various rule logics and platforms. RuleML consists of [Deliberation RuleML](http://wiki.ruleml.org/index.php/Specification_of_Deliberation_RuleML) and [Reaction RuleML](http://wiki.ruleml.org/index.php/Specification_of_Reaction_RuleML). \r\n\r\nThis project is aimed at implementing an [XSLT 2.0](http://www.w3.org/TR/xslt20/) translator to convert [Datalog+](http://www.slideshare.net/polibear/datalog-and-its-extensions-for-semantic-web-databases) [Deliberation RuleML 1.01](http://wiki.ruleml.org/index.php/Specification_of_Deliberation_RuleML_1.01) in XML format to an equivalent representation in a subset of the (FOF) [TPTP](http://www.cs.miami.edu/~tptp/) language. See [here](http://deliberation.ruleml.org/1.01/doc/datalogplus_min_normal/) for the normalized Datalog+ Deliberation RuleML 1.01 schema on which this project is based.\r\n\r\n### Initiative, Report and Slides\r\n\r\nThis project was initiated as a [course project](http://www.cs.unb.ca/~boley/cs6795swt/fall2014projects.html) (Team 5) in [Semantic Web Techniques](http://www.cs.unb.ca/~boley/cs6795swt/) in [UNB](http://www.unb.ca). Thanks to [Prof. Harold Boley](http://www.cs.unb.ca/~boley/) and advisor [Dr. Tara Athan](http://www.alt2is.com/) for their instruction in semantic web techniques! The project report can be downloaded from [here](http://edmonl.github.io/RuleML2TPTP/RuleML2TPTP_report.pdf). There are also the [slides](http://edmonl.github.io/RuleML2TPTP/presentation/slides_with_sources.zip) (two parts, [part 1](http://edmonl.github.io/RuleML2TPTP/presentation/RuleML2TPTP_part1_ChangyangLiu.pdf) presented by Changyang Liu, [part 2](http://edmonl.github.io/RuleML2TPTP/presentation/RuleML2TPTP_part2_MengLuan.pdf) presented by Meng Luan) and [RuleML examples](http://edmonl.github.io/RuleML2TPTP/presentation/ruleml_examples.zip) that were used for a presentation in class.\r\n\r\n### Getting Started\r\n\r\n1. Download the binary or source code from the [project releases](https://github.com/EdmonL/RuleML2TPTP/releases).\r\n2. If the source code is downloaded, use ant to build by \"ant jar\". See \"ant -projecthelp\" for other ant targets.\r\n3. Translate a RuleML file by calling \"java -jar /path/to/ruleml2tptp.jar -s &lt;source RuleML filename&gt; -o &lt;output filename&gt;\". See \"java -jar /path/to/ruleml2tptp.jar -h\" for full usage.\r\n4. Java SE 7 or higher is recommended.\r\n5. Saxon is used dynamically, so saxon.jar can be removed and the local JAXP implementation will be used instead. Make sure, however, that the local implementation supports XSLT 2.0, or things will go wrong.\r\n6. See the [project wiki](https://github.com/EdmonL/RuleML2TPTP/wiki) for other documentation.\r\n\r\n### RuleML Examples\r\n\r\nHere are some good RuleML examples from [RuleML wiki](http://wiki.ruleml.org/index.php/Specification_of_Deliberation_RuleML_1.01#Examples) or [here](http://deliberation.ruleml.org/1.01/exa/DatalogPlus/) to try with this project.\r\n\r\n### License\r\n\r\nThis project is under [GNU GPL v3.0](https://github.com/EdmonL/RuleML2TPTP/blob/master/LICENSE).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}